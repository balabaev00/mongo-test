import {Injectable} from "@nestjs/common";
import {InjectModel} from "@nestjs/mongoose";
import {Model} from "mongoose";
import {RefreshToken, RefreshTokenDocument} from "./schemas/refreshToken.schema";

@Injectable()
export class RefreshTokenRepository {
	constructor(
		@InjectModel(RefreshToken.name) private refreshModel: Model<RefreshTokenDocument>
	) {}

	/**
	 * It finds a single record in the database that matches the userId passed in
	 * @param {string} userId - The user's ID.
	 * @returns A refresh token record.
	 */
	async findOne(userId: string) {
		return await this.refreshModel.findOne({user: userId});
	}

	async findOneByRefreshToken(refreshToken: string) {
		return await this.refreshModel.findOne({refreshToken});
	}

	/**
	 * It creates a new refresh token in the database
	 * @param {string} userId - The user's id
	 * @param {string} refreshToken - The refresh token that was generated by the server.
	 * @returns The refresh token is being returned.
	 */
	async create(userId: string, refreshToken: string) {
		return await this.refreshModel.create({user: userId, refreshToken});
	}

	/**
	 * It deletes a refresh token from the database
	 * @param {string} refreshToken - The refresh token that was sent to the client.
	 * @returns The refresh token is being deleted from the database.
	 */
	async deleteToken(refreshToken: string) {
		return await this.refreshModel.remove({refreshToken});
	}
}
